/*
Design a cash register drawer function checkCashRegister()that accepts purchase price as the first argument (price), payment as the second argument (cash), and cash-in-drawer (cid) as the third argument.

cidis a 2D array listing available currency.

The checkCashRegister()function should always return an object with a statuskey and a changekey.

Return {status: "INSUFFICIENT_FUNDS", change: []}if cash-in-drawer is less than the change due, or if you cannot return the exact change.

Return {status: "CLOSED", change: [...]}with cash-in-drawer as the value for the key changeif it is equal to the change due.

Otherwise, return {status: "OPEN", change: [...]}, with the change due in coins and bills, sorted in highest to lowest order, as the value of the changekey.

*/

function checkCashRegister(price, cash, cid) {
  const change = parseFloat(cash-price).toFixed(2);
  var inDrawer=0;
  var cashRegisterReturn = {status: "", change: []};

  //cashRegisterReturn.change = [["PENNY", 0], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]];

  var valueBills = [["PENNY", 0.01], ["NICKEL", 0.05], ["DIME", 0.1], ["QUARTER", 0.25], ["ONE", 1], ["FIVE", 5], ["TEN", 10], ["TWENTY", 20], ["ONE HUNDRED", 100]];
  var Bills = [["PENNY", 0], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]];
  var change2 = change;

  for(let i=0; i<cid.length; i++){
    inDrawer += cid[i][1];
    Bills[i][1] =  parseInt(cid[i][1]/valueBills[i][1]);
  }


  inDrawer = inDrawer.toFixed(2);
  let m=0;
  let nBills=0;

  if (change > inDrawer){
    cashRegisterReturn.status = "INSUFFICIENT_FUNDS";
    cashRegisterReturn.change = [];
  } else if(change == inDrawer){
    cashRegisterReturn.status = "CLOSED";
    cashRegisterReturn.change = cid;
  } else {
    cashRegisterReturn.status = "OPEN";
    for (let k = 0; k < valueBills.length; k++){
      nBills = 0;
      while (change2 >= valueBills[8-k][1] ){
        //n = 0;
        console.log("Change = ", change2)
        //console.log("Bill = ", valueBills[8-k][0]);
        //console.log("Value = ", valueBills[8-k][1]);
        change2 -= valueBills[8-k][1];
        nBills += valueBills[8-k][1];;
        //console.log("nBills", nBills);
      }
      if (nBills > 0){
        console.log("Aqui estoy")
        cashRegisterReturn.change[m] = [valueBills[8-k][0], nBills];
        console.log(cashRegisterReturn.change);
        m +=1;
      }

    }
  }

  return cashRegisterReturn;
}

// should return {status: "OPEN", change: [["QUARTER", 0.5]]}
console.log(checkCashRegister(19.5, 20, [["PENNY", 1.01], ["NICKEL", 2.05], ["DIME", 3.1], ["QUARTER", 4.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]));
